
Allocating common symbols
Common symbol       size              file

The_string          0x64              app.o

Memory Configuration

Name             Origin             Length             Attributes
Mem              0x00000000         0x04000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00010000                . = 0x10000

.startup        0x00010000        0xc
 startup.o(.text)
 .text          0x00010000        0xc startup.o
                0x00010000                reset

.text           0x0001000c       0x64
 *(.text)
 .text          0x0001000c       0x14 app.o
                0x0001000c                main
 .text          0x00010020       0x50 uart.o
                0x00010020                myfunc
 *(.rodata)

.glue_7         0x00010070        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x00010070        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x00010070        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00010070        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.data           0x00010070        0x0
 *(.data)
 .data          0x00010070        0x0 startup.o
 .data          0x00010070        0x0 app.o
 .data          0x00010070        0x0 uart.o

.bss            0x00010070       0x64
 *(.bss)
 .bss           0x00010070        0x0 startup.o
 .bss           0x00010070        0x0 app.o
 .bss           0x00010070        0x0 uart.o
 *(COMMON)
 COMMON         0x00010070       0x64 app.o
                0x00010070                The_string
                0x000110d4                . = (. + 0x1000)
                0x000110d4                stack_top = .
LOAD app.o
LOAD uart.o
LOAD startup.o
OUTPUT(learn-in-depth.elf elf32-littlearm)

.ARM.attributes
                0x00000000       0x2e
 .ARM.attributes
                0x00000000       0x22 startup.o
 .ARM.attributes
                0x00000022       0x32 app.o
 .ARM.attributes
                0x00000054       0x32 uart.o

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 app.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 uart.o

.debug_line     0x00000000       0xab
 .debug_line    0x00000000       0x38 startup.o
 .debug_line    0x00000038       0x34 app.o
 .debug_line    0x0000006c       0x3f uart.o

.debug_info     0x00000000      0x126
 .debug_info    0x00000000       0x49 startup.o
 .debug_info    0x00000049       0x82 app.o
 .debug_info    0x000000cb       0x5b uart.o

.debug_abbrev   0x00000000       0xe5
 .debug_abbrev  0x00000000       0x14 startup.o
 .debug_abbrev  0x00000014       0x83 app.o
 .debug_abbrev  0x00000097       0x4e uart.o

.debug_aranges  0x00000000       0x60
 .debug_aranges
                0x00000000       0x20 startup.o
 .debug_aranges
                0x00000020       0x20 app.o
 .debug_aranges
                0x00000040       0x20 uart.o

.debug_loc      0x00000000       0x58
 .debug_loc     0x00000000       0x2c app.o
 .debug_loc     0x0000002c       0x2c uart.o

.debug_pubnames
                0x00000000       0x47
 .debug_pubnames
                0x00000000       0x2a app.o
 .debug_pubnames
                0x0000002a       0x1d uart.o

.debug_str      0x00000000       0x55
 .debug_str     0x00000000       0x4e app.o
 .debug_str     0x0000004e        0x7 uart.o
                                 0x3f (size before relaxing)

.debug_frame    0x00000000       0x50
 .debug_frame   0x00000000       0x28 app.o
 .debug_frame   0x00000028       0x28 uart.o

